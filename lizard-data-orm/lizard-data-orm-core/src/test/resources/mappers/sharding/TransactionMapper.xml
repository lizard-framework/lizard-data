<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.lizardframework.data.orm.fixture.sharding.repository.TransactionDAO">
  <resultMap id="BaseResultMap" type="io.lizardframework.data.orm.fixture.sharding.repository.entity.TransactionEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="tx_no" jdbcType="VARCHAR" property="txNo" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, tx_no, amount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from $[t_transaction]
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from $[t_transaction]
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.lizardframework.data.orm.fixture.sharding.repository.entity.TransactionEntity">
    insert into $[t_transaction] (id, order_no, tx_no, 
      amount, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{txNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.lizardframework.data.orm.fixture.sharding.repository.entity.TransactionEntity">
    insert into $[t_transaction]$
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        id,
      </if>
      <if test="record.orderNo != null">
        order_no,
      </if>
      <if test="record.txNo != null">
        tx_no,
      </if>
      <if test="record.amount != null">
        amount,
      </if>
      <if test="record.createTime != null">
        create_time,
      </if>
      <if test="record.updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.txNo != null">
        #{record.txNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.lizardframework.data.orm.fixture.sharding.repository.entity.TransactionEntity">
    update $[t_transaction]
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="txNo != null">
        tx_no = #{txNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.lizardframework.data.orm.fixture.sharding.repository.entity.TransactionEntity">
    update $[t_transaction]
    set order_no = #{orderNo,jdbcType=VARCHAR},
      tx_no = #{txNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>